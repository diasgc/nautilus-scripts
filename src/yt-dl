#!/bin/bash

root="$(dirname $(readlink .f ${BASH_SOURCE[0]}))"
source "$root/.common"
source "$root/.ffutils"

startDebug

checkDeps ffmpeg youtube-dl

dialogFormat(){
  local out="$(awk '/format /{found=1} found' <<< $(youtube-dl --list-formats $url || sendMsg "Fail to resolve Url.\nAborting.") | tail +2)"
  format=$(zenity --width=400 --height=400 --list --title="Available Formats" --text="" \
    --column="Format" --column="Extension" --column="Resolution" $(awk '{print $1,$2,$3}' <<<"$out"))
}

abort(){
  sleep 2
  if [ -e /proc/$PID ]; then
    killall ffmpeg
    rm -f $log
    zenity --error --text "$errMsg"
  fi
  exit
}

sendMsg(){
  echo "# $1"
  errMsg="$1"
  exit 1
}


doFFmpeg(){
  errMsg="Aborted by user."
  meta="${meta} -metadata description=${url}"
  ffurl="$(youtube-dl --youtube-skip-dash-manifest --add-metadata -f ${format} -g ${url})"

  test -z "$ffurl" && sendMsg "No Url found, aborting."
  
  echo "# Found url."

  if [ -z "$res" ]; then
    res=($( ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of default=nw=1:nk=1 "$ffurl" ))
    res=$(( ${res[0]} > ${res[1]} ? ${res[0]} : ${res[1]} ))
    lab=( SD1 SD2 SD3 SD4 HD FHD UHD 8K )
    lim=( 240 360 480 720 1080 2146 4320 )
    r="8K"
    for i in ${!lab[@]}; do
    test $res -lt ${lim[$i]} && r=${lab[$i]} && break
    done
    sfx="$r$sfx"
  fi

  if [ -n "${clipa}${clipb}" ]; then
    test -z "$clipa" && clipa=120
    test -z "$clipb" && clipb=10
    a1="-vf select='lt(mod(t\,$clipa)\,$clipb)',setpts=N/FRAME_RATE/TB -af aselect='lt(mod(t\,$clipa)\,$clipb)',asetpts=N/SR/TB ${a1}"
    sfx="C${sfx}"
  fi

  meta="-movflags use_metadata_tags -metadata album_artist=${tag} -metadata url=${url}"
  tag="${tag}@$(echo "$url" | awk -F/ '{print $3}' | awk -F. '{print substr($(NF-1),1,2)}')"
  id=$(youtube-dl --get-id ${url} || sendMsg "Fail to get video id, aborting.")
  output="${tag}-${id}-${sfx}.mp4"
  
  log="/tmp/yt-dl.tmp"
  ffcmd="${a0} -i ${ffurl} -progress ${log} ${a1} ${meta} ${output}"

  pfrac=100
  step=0

  # get duration
  duration=$(ffprobeDuration "$ffurl")
  # then adjust duration to start/end values
  if [ -n "$end" ]; then
    duration=$(TZ=utc date -d "1970-01-01 00:$end" +'%s')
  fi  
  if [ -n "$start" ]; then
    stt=$(TZ=utc date -d "1970-01-01 00:$start" +'%s')
    duration=$(( duration - stt ))
  fi

  # required vars to ffProgress
  fname="${output}"
  fsize="-"
  count=1
  timeStart=$(date +%s)
  ffmpeg -hide_banner -v quiet ${ffcmd} & PID=$! && ffProgress
}






# Main Program

errMsg="Unknown error, aborting!"
trap abort INT TERM EXIT

opts=$(zenity --width=500 --forms --title "Youtube-dl" \
  --text "Enter URL" \
  --add-entry "Url (required)" \
  --add-entry "Tag (required)" \
  --add-combo "Format" --combo-values "default|240p|360p|480p|720p|1080p|2k|4k|8k" \
  --add-entry "From Time" \
  --add-entry "To Time" \
  --add-entry "Suffix" \
  --add-combo "Encoder" --combo-values "default|libx265|hevc_vaapi|avif|h264|h266" \
  --add-combo "Clip interval (s)" --combo-values "default|10|15|20|30" \
  --add-combo "Clip length (s)" --combo-values "default|5|7|10|15|20|30" \
)

values=($(zen2arr $opts "default"))
#values=($((tr '|' '\n' | sed 's,^[ ]*$,default,g') <<<$opts))
keys=( url tag format start end sfx encoder clipa clipb )

for i in "${!values[@]}"; do
  echo "Testing ${keys[$i]}=${values[$i]}"
  test "x${values[$i]}" == "xdefault" || eval "${keys[${i}]}=${values[${i}]}"
done

test -z "$url" && sendMsg "Url required! Exiting."
test -z "$tag" && sendMsg "Tag required! Exiting."
dialogFormat
test -z "$sfx" && sfx="265"
test -z "$encoder" && encoder="libx265 $(x265opts) -b:a 56k "

case "$encoder" in *hevc_vaapi*)
  a0="-y -init_hw_device vaapi=amd:/dev/dri/renderD128 -hwaccel vaapi -hwaccel_output_format vaapi -hwaccel_device amd -filter_hw_device amd"
  a1="-c:v ${encoder} -rc_mode auto -profile main -tier high";;
  *) a1="-c:v ${encoder}";;
esac

test -n "${end}" && a1="-to ${end} ${a1}"
test -n "${start}" && a1="-ss ${start} ${a1}"

doFFmpeg | zenity --progress --width=500 --title="Downloading" \
  --text="Initializing please wait..." \
  --percentage=0 \
  --auto-close --auto-kill
